name: CI Model Training Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  train_model:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }} 
          password: ${{ secrets.DOCKER_PASSWORD }} 

      - name: Get current date for image tag
        id: date
        run: echo "date=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./Workflow-CI/MLProject
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/pollution_prediction_model:latest
            ${{ secrets.DOCKER_USERNAME }}/pollution_prediction_model:${{ steps.date.outputs.date }}
          file: ./Workflow-CI/MLProject/Dockerfile

      - name: Setup Conda Environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: 3.12
          auto-update-conda: true
          environment-file: ./Workflow-CI/MLProject/conda.yaml
          activate-environment: pollution_env

      - name: Run MLflow Project to train model
        shell: bash -l {0}
        run: |
          cd Workflow-CI/MLProject
          mlflow run . --entry-point main --experiment-name "${{ secrets.MLFLOW_EXPERIMENT_NAME }}"
        env:
          MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
          MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
          
      - name: Create Tag
        id: tag
        run: |
          TAG="v$(date +'%Y%m%d%H%M%S')"
          git tag $TAG
          git push origin $TAG
          echo "TAG=$TAG" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Create GitHub Release and upload model artifact
        uses: softprops/action-gh-release@v1
        with:
          files: Workflow-CI/MLProject/model.pkl
          tag_name: ${{ steps.tag.outputs.TAG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
    